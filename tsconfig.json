{
  "compilerOptions": {
    "target": "ESNext", /* Skip type checking all .d.ts files. */
    "baseUrl": "src", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "ESNext", /* Specify what module code is generated. */
    "moduleResolution": "node",
    "paths": {
      "@controller/*": [
        "controller/*"
      ],
      "@db/*": [
        "database/*"
      ],
      "@routes/*": [
        "routes/*"
      ],
      "@config/*": [
        "config/*"
      ],
      "@services/*": [
        "services/*"
      ]
    }, /* Specify how TypeScript looks up a file from a given module specifier. */
    "allowJs": true, /* Ensure that casing is correct in imports. */
    "strict": false, /* Enable all strict type-checking options. */
    "strictNullChecks": true,
    "noUnusedLocals": false, /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": false, /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    "outDir": "dist", /* Specify an output folder for all emitted files. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Raise an error when a function parameter isn't read. */
    "skipLibCheck": true
  },
  "include": [
    "src/**/*.ts"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "shared"
  ]
}
